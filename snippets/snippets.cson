'.source.js':
  'Button':
    'prefix': 'rnButton'
    'body': '''<Button
                 onPress={onButtonPress}
                 title="${1:YourTitle}"
                 color="#1aad5b"
                 accessibilityLabel="YourLabelHere"
               />'''
  'Constructor':
    'prefix': 'rnConstructor'
    'body': '''constructor() {
                super();
                ${1:}
              }'''
  'Image':
    'prefix': 'rnImage'
    'body': '''<Image source={${1:require('./img/image.png')}}/>'''
  'ListView':
    'prefix': 'rnListView'
    'body': '''<ListView
                dataSource={this.state.${1:dataSource}}
                renderRow={(rowData) => <Text>{rowData}</Text>}
              />'''
  'ListView DataSource':
    'prefix': 'rnListViewDataSource'
    'body': '''const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});
               this.state = {
                 ${1:dataSource}: ds.cloneWithRows(['row 1', 'row 2']),
               };'''
  'Props':
    'prefix': 'rnProps'
    'body': '''{this.props.${1:myProp}}'''
  'Render':
    'prefix': 'rnRender'
    'body': '''render() {
                 return (
                   ${1:}
                 );
               }'''
  'Register':
    'prefix': 'rnRegisterComponent'
    'body': '''AppRegistry.registerComponent('${1:myApp}', () => ${1:myApp});'''
  'ScrollView':
    'prefix': 'rnScrollView'
    'body': '''<ScrollView>
                 ${1:}
               </ScrollView>'''
  'State':
    'prefix': 'rnState'
    'body': '''this.state = ${1:myValue};'''
  'Set State':
    'prefix': 'rnSetState'
    'body': '''this.setState({ ${1:myValue} });'''
  'Style':
    'prefix': 'rnStyle'
    'body': '''style={styles.${1:myStyle}}'''
  'Style Create':
    'prefix': 'rnStyleCreate'
    'body': '''myStyle: {
                ${1:}
               }'''
  'StyleSheet Create':
    'prefix': 'rnStyleSheet'
    'body': '''const styles = StyleSheet.create({
                 container: {
                   flex: 1,
                 },
               });'''
  'Text':
    'prefix': 'rnText'
    'body': '''<Text>${1:YourText}</Text>'''
  'TextInput':
    'prefix': 'rnTextInput'
    'body': '''<Text>${1:YourText}</Text>'''
  'View':
    'prefix': 'rnView'
    'body': '''<View>
                 ${1:}
               </View>'''
